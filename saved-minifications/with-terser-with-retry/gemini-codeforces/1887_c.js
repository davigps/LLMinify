const main=()=>{let t=readInt();let a=[];while(t--){let z=readIntArr();let n=z[0],m=z[1],k=z[2];let k2;if(m>=n){k2=n-1+parseInt(m/n)}else{k2=m}let ans;if(k===1){ans=1}else if(k===2){ans=k2}else if(k===3){ans=m-k2}else{ans=0}a.push(ans)}multiLineArrayPrint(a);return};const readInt=()=>parseInt(readline());const readString=()=>readline();const readIntArr=()=>readline().split(" ").map((z=>parseInt(z)));const parseLong=s=>{var n=s.length;var r=0;for(var i=0;i<n;i++){r*=10;r+=parseInt(s[i])}return r};const readLong=()=>parseLong(readLong());const readLongArr=()=>readline().split(" ").map((z=>parseLong(z)));const oneLineArrayPrint=a=>print(a.map((z=>z.toString())).join(" "));const multiLineArrayPrint=a=>print(a.map((z=>z.toString())).join("\n"));const multiLineArrayOfArraysPrint=a=>print(a.map((y=>y.map((z=>z.toString())).join(" "))).join("\n"));const makeArr=(d,a)=>{var n=a.length;if(n===1)return Array(a[0]).fill(d);else{var t=[];for(var i=0;i<a[0];i++)t.push(makeArr(d,a.slice(1)));return t}};for(let _=0;_<1;_++){main()}
