const solve=()=>{var n,a=[],pref=[],suf=[];n=readInt();var temp=readIntArr();a.push(0);for(var i=0;i<n;i++)a.push(temp[i]);for(var i=0;i<n+2;i++)pref.push(0),suf.push(0);for(var i=1;i<=n;i++)pref[i]=Math.max(pref[i-1],a[i]+n-i);for(var i=n;i>=1;i--)suf[i]=Math.max(suf[i+1],a[i]+i-1);var ans=2e9;for(var i=1;i<=n;i++)ans=Math.min(ans,Math.max(a[i],pref[i-1],suf[i+1]));return ans};const main=()=>print(solve());const readInt=()=>parseInt(readline()),readString=()=>readline(),readIntArr=()=>readline().split(" ").map((z=>parseInt(z))),parseLong=s=>{var n=s.length,r=0;for(var i=0;i<n;i++)r=10*r+parseInt(s[i]);return r},readLong=()=>parseLong(readLong()),readLongArr=()=>readline().split(" ").map((z=>parseLong(z))),oneLineArrayPrint=a=>print(a.map((z=>z.toString())).join(" ")),multiLineArrayPrint=a=>print(a.map((z=>z.toString())).join("\n")),multiLineArrayOfArraysPrint=a=>print(a.map((y=>y.map((z=>z.toString())).join(" "))).join("\n")),makeArr=(d,a)=>{var n=a.length;if(n===1)return Array(a[0]).fill(d);else{var t=[];for(var i=0;i<a[0];i++)t.push(makeArr(d,a.slice(1)));return t}};for(_=0;_<1;_++)main();
